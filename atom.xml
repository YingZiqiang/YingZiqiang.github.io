<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一只NLP程序猿的点滴</title>
  
  <subtitle>生命太短暂，不要去做一些根本没有人想要的东西</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-18T15:49:26.106Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yingzq</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为什么需要Git</title>
    <link href="http://yoursite.com/2019/09/18/why-we-need-git/"/>
    <id>http://yoursite.com/2019/09/18/why-we-need-git/</id>
    <published>2019-09-18T14:19:30.000Z</published>
    <updated>2019-09-18T15:49:26.106Z</updated>
    
    <content type="html"><![CDATA[<p>相信写过代码的程序猿们都听说过Git的大名，哪怕是刚刚入门的小白，也在GitHub等代码托管网站<code>git clone</code>过他人的代码。为什么Git如此风靡，或者说我们为什么如此需要Git呢？本文将为你讲述Git的前世往生。</p><blockquote><p>注：本文只包含了Git的相关概念，不包含任何命令行代码。</p></blockquote><h2 id="关于版本控制"><a href="#关于版本控制" class="headerlink" title="关于版本控制"></a>关于版本控制</h2><p>首先来了解一下什么是“版本控制”：<strong>版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。</strong> 一般情况下是针对程序的源代码文件进行版本控制，但实际上你可以对任何类型的文件进行版本控制。</p><h3 id="本地版本控制系统"><a href="#本地版本控制系统" class="headerlink" title="本地版本控制系统"></a>本地版本控制系统</h3><p>许多人习惯用复制整个项目目录的方式来保存不同的版本，或许还会改名加上备份时间以示区别。这么做唯一的好处就是简单。不过坏处也不少：有时候会混淆所在的工作目录，一旦弄错文件丢了数据就没法撤销恢复。</p><p>为了解决这个问题，人们很久以前就开发了许多种本地版本控制系统，大多都是采用某种简单的数据库来记录文件的历次更新差异。</p><div align="center"><img src="https://ws1.sinaimg.cn/large/0069PVnXly1g743pyvicjj311k0wagpf.jpg" width="90%" alt align="center"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;相信写过代码的程序猿们都听说过Git的大名，哪怕是刚刚入门的小白，也在GitHub等代码托管网站&lt;code&gt;git clone&lt;/code&gt;过他人的代码。为什么Git如此风靡，或者说我们为什么如此需要Git呢？本文将为你讲述Git的前世往生。&lt;/p&gt;
&lt;blockquote
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
</feed>
